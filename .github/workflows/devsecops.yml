name: Devsecops python CI/CD pipeline (selfhosted)

on:
  push:
    branches: [main]

env:
  EC2_IP:   ${{secrets.EC2_IP}}
  EC2_USER: ${{secrets.EC2_USER}}
  EC2_KEY: ${{secrets.EC2_KEY}}
  APP_PATH: /opt/app/
  APP_URL: http://${{secrets.EC2_IP}}:5000
  SONAR_HOST_URL: ${{secrets.SONAR_URL}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

jobs:
  devsecops-pipeline:
    runs-on: [self-hosted, linux, python]


    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run unittest with coverage
      run: 
        coverage run -m unittest discover tests/
        coverage xml


#---------SAST--SCAN--------------------------------------

    - name: bandit scan (SAST)
      run: 
        pip install bandit
        bandit -r . -ll

    - name: Trivy filesystem scan(SAST)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        scan-ref: .

    - name: snyk scan(SAST)
      uses: snyk/action/python-3@master
      env:
        SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
      with:
        args: test

    - name: sonaqube scan
      env: 
        SONAR_HOST_URL: ${{secrets.SONAR_HOST_URL}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      run: |
        if ! command -v sonar-scanner &> /dev/null; then
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          export PATH=$PATH:$(pwd)/sonar-scanner-cli-5.0.1.3006-linux/bin
        fi

        sonar-scanner \
          -Dsonar.projectkey=paytm \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.python.coverage.reportPaths=coverage.xml

#---------------DAST scan-----------------------

    - name: run OWASP ZAP Scan (DAST)
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: ${{env.APP_URL}}

#--------------------Deployment---------------------

    - name: Deploy to EC2(python app)
      run: 
        echo "$EC2_KEY" > key.pem
        chmod 400 key.pem
        ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "
          mkdir -p $APP_PATH &&
          cp -r $APP_PATH $APP_PATH.bak || true
        "
        scp -i key.pem -r . $EC2_USER@$EC2_IP:$APP_PATH
        ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "
          cd $APP_PATH &&
          sudo systemctl restart python-app.service
        "

    # --- Rollback on Failure ---
    - name: Rollback if Deployment Fails
      if: failure()
      run: |
        ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "
          if [ -d $APP_PATH.bak ]; then
            rm -rf $APP_PATH
            mv $APP_PATH.bak $APP_PATH
            sudo systemctl restart python-app.service
          fi
        "







